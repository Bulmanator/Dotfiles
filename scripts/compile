#!/usr/bin/env python3
# @Todo: Test this shebang works for linux -- It should though

import sys
import os
import re

colours = {
    "Black"      : '\033[0;30m',
    "Red"        : '\033[0;31m',
    "Green"      : '\033[0;32m',
    "Orange"     : '\033[0;33m',
    "Blue"       : '\033[0;34m',
    "Purple"     : '\033[0;35m',
    "Cyan"       : '\033[0;36m',
    "LightGray"  : '\033[0;37m',
    "DarkGray"   : '\033[1;30m',
    "LightRed"   : '\033[1;31m',
    "LightGreen" : '\033[1;32m',
    "Yellow"     : '\033[1;33m',
    "LightBlue"  : '\033[1;34m',
    "LightBlue"  : '\033[1;35m',
    "LightCyan"  : '\033[1;36m',
    "White"      : '\033[1;37m',
    "NoColour"   : '\033[0m'
}

show_warnings = False

if __name__ == "__main__":

    terminal_columns = os.get_terminal_size()[0]

    # Collate all of the data into dictionaries
    lines = []
    for line in sys.stdin:
        data = re.split(r"(?<!:):(?!:)", line);
        if '(' in data[0]:
            data[0] = re.sub(r"[\(,]", ":", data[0]).replace(')', "")
            tmp_data = re.split(r"(?<!:):(?!:)", data[0])
            data = tmp_data + data[1:]

        if len(data) < 3: continue
        elif data[1].strip() == "error": continue

        filename = data[0].split('/')
        line_data = {}
        line_data["File"] = filename[len(filename) - 1]
        line_data["Line"] = data[1]

        if len(data) >= 5:
            line_data["Type"] = data[3].lstrip().title()
            line_data["Message"] = ""
            for x in range(4, len(data) - 1):
                line_data["Message"] += data[x].lstrip() + ": "
            line_data["Message"] += data[len(data) - 1].lstrip()
        elif len(data) == 3:
            line_data["Type"] = "Linker"
            line_data["Message"] = data[2].lstrip()
            line_data["Line"] = "---"

        lines.append(line_data)

    if (len(lines) == 0):
        print("| " + colours["Orange"] + "No Errors or Warnings" + colours["NoColour"] + " |")
        sys.exit(0)

    # Correct padding
    filename = 0
    line_number = 0
    message = 0
    type_len = 0
    for data in lines:
        if len(data["File"]) > filename:
            filename = len(data["File"])

        if len(data["Line"]) > line_number:
            line_number = len(data["Line"])

        if len(data["Type"]) > type_len:
            type_len = len(data["Type"])

        if len(data["Message"]) > message:
                message = len(data["Message"])

    filename += 1
    line_number += 1
    type_len += 1

    if line_number < 5: line_number = 5

    header = "| File".ljust(filename + 2) + "| " + "Line".ljust(line_number) + "| "
    header += "Type".ljust(type_len) + "| "

    if (len(header) + message > terminal_columns):
        message = terminal_columns - len(header)

    print(header + "Message")
    print("-"*(len(header) + message))
    did_error = False
    for data in lines:
        line = "| " + colours["Purple"] + data["File"].ljust(filename) + \
                colours["LightGray"] + "| " + \
                colours["Yellow"] + data["Line"].ljust(line_number) + colours["LightGray"] + "| "

        colour = colours["NoColour"]
        if data["Type"] == "Error" or data["Type"] == "Fatal Error":
            colour = colours["Red"]
            did_error = True
        elif data["Type"] == "Warning":
            colour = colours["Orange"]
        elif data["Type"] == "Linker":
            colour = colours["Purple"]
            did_error = True

        if (len(data["Message"]) > message):
            data["Message"] = data["Message"][0:message - 3] + "..."

        line = line + colour + data["Type"].ljust(type_len) + colours["LightGray"] + "| "
        line = line + colours["NoColour"] + data["Message"]

        print(line.strip('\n'))

    if did_error:
        print(colours["LightRed"] + "** Failed to Compile **" + colours["NoColour"])
    else:
        print(colours["LightGreen"] + "** Compiled Successfully **" + colours["NoColour"])

